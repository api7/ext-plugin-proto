# automatically generated by the FlatBuffers compiler, do not modify

# namespace: ExtraInfo

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Resp(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Resp()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsResp(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Resp
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Resp
    def Result(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 1))
        return 0

    # Resp
    def ResultAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint8Flags, o)
        return 0

    # Resp
    def ResultLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Resp
    def ResultIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

def Start(builder): builder.StartObject(1)
def RespStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddResult(builder, result): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(result), 0)
def RespAddResult(builder, result):
    """This method is deprecated. Please switch to AddResult."""
    return AddResult(builder, result)
def StartResultVector(builder, numElems): return builder.StartVector(1, numElems, 1)
def RespStartResultVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartResultVector(builder, numElems)
def End(builder): return builder.EndObject()
def RespEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)