// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class RespBody {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):RespBody {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsRespBody(bb:flatbuffers.ByteBuffer, obj?:RespBody):RespBody {
  return (obj || new RespBody()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsRespBody(bb:flatbuffers.ByteBuffer, obj?:RespBody):RespBody {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new RespBody()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startRespBody(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endRespBody(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createRespBody(builder:flatbuffers.Builder):flatbuffers.Offset {
  RespBody.startRespBody(builder);
  return RespBody.endRespBody(builder);
}
}
