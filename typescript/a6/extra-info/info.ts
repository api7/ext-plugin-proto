// automatically generated by the FlatBuffers compiler, do not modify

import { ReqBody } from '../../a6/extra-info/req-body';
import { RespBody } from '../../a6/extra-info/resp-body';
import { Var } from '../../a6/extra-info/var';


export enum Info{
  NONE = 0,
  Var = 1,
  ReqBody = 2,
  RespBody = 3
}

export function unionToInfo(
  type: Info,
  accessor: (obj:ReqBody|RespBody|Var) => ReqBody|RespBody|Var|null
): ReqBody|RespBody|Var|null {
  switch(Info[type]) {
    case 'NONE': return null; 
    case 'Var': return accessor(new Var())! as Var;
    case 'ReqBody': return accessor(new ReqBody())! as ReqBody;
    case 'RespBody': return accessor(new RespBody())! as RespBody;
    default: return null;
  }
}

export function unionListToInfo(
  type: Info, 
  accessor: (index: number, obj:ReqBody|RespBody|Var) => ReqBody|RespBody|Var|null, 
  index: number
): ReqBody|RespBody|Var|null {
  switch(Info[type]) {
    case 'NONE': return null; 
    case 'Var': return accessor(index, new Var())! as Var;
    case 'ReqBody': return accessor(index, new ReqBody())! as ReqBody;
    case 'RespBody': return accessor(index, new RespBody())! as RespBody;
    default: return null;
  }
}

